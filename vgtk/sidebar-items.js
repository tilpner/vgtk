initSidebarItems({"enum":[["UpdateAction","An action resulting from a `Component::update()`."],["VNode","A node in the virtual component tree representing a [`Component`][Component] or a Gtk widget."]],"fn":[["current_object","Get the current [`Object`][Object]."],["current_window","Get the current [`Window`][Window]."],["menu","Construct a [`MenuBuilder`][MenuBuilder]."],["message_dialog","Open a simple [`MessageDialog`][MessageDialog]."],["quit","Tell the running [`Application`][Application] to quit."],["run","Run an [`Application`][Application] component until termination."],["run_dialog","Launch a [`Dialog`][Dialog] component as a modal dialog."],["start","Start an [`Application`][Application] component."]],"macro":[["gtk","Generate a virtual component tree."],["gtk_if","Generate a virtual component tree only if a condition is true."],["on_signal","Connect a GLib signal to a [`Future`][Future]."],["stream_signal","Connect a GLib signal to a [`Stream`][Stream]."]],"mod":[["ext","Helper traits for adapting the GTK API to the [`gtk!`][gtk!] macro's mindset."],["lib","Re-exports of GTK and its associated libraries."],["types","Useful types for GTK extensions."]],"struct":[["Callback","A callback property for sub-[`Component`][Component]s."],["MenuBuilder","Makes a [`gtk::Menu`][Menu] for you."],["Scope","A channel for sending messages to a [`Component`][Component]."],["VNodeIterator","An iterator over zero or one [`VNode`][VNode]s."]],"trait":[["Component","This is the trait your UI components should implement."]]});